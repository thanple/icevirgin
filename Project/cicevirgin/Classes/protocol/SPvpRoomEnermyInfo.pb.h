// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SPvpRoomEnermyInfo.proto

#ifndef PROTOBUF_SPvpRoomEnermyInfo_2eproto__INCLUDED
#define PROTOBUF_SPvpRoomEnermyInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SPvpRoomEnermyInfo_2eproto();
void protobuf_AssignDesc_SPvpRoomEnermyInfo_2eproto();
void protobuf_ShutdownFile_SPvpRoomEnermyInfo_2eproto();

class SPvpRoomEnermyInfo;

// ===================================================================

class SPvpRoomEnermyInfo : public ::google::protobuf::Message {
 public:
  SPvpRoomEnermyInfo();
  virtual ~SPvpRoomEnermyInfo();

  SPvpRoomEnermyInfo(const SPvpRoomEnermyInfo& from);

  inline SPvpRoomEnermyInfo& operator=(const SPvpRoomEnermyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SPvpRoomEnermyInfo& default_instance();

  void Swap(SPvpRoomEnermyInfo* other);

  // implements Message ----------------------------------------------

  SPvpRoomEnermyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SPvpRoomEnermyInfo& from);
  void MergeFrom(const SPvpRoomEnermyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 hair = 1;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 1;
  inline ::google::protobuf::int32 hair() const;
  inline void set_hair(::google::protobuf::int32 value);

  // required int32 body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline ::google::protobuf::int32 body() const;
  inline void set_body(::google::protobuf::int32 value);

  // required int32 weapon = 3;
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 3;
  inline ::google::protobuf::int32 weapon() const;
  inline void set_weapon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SPvpRoomEnermyInfo)
 private:
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_weapon();
  inline void clear_has_weapon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 hair_;
  ::google::protobuf::int32 body_;
  ::google::protobuf::int32 weapon_;
  friend void  protobuf_AddDesc_SPvpRoomEnermyInfo_2eproto();
  friend void protobuf_AssignDesc_SPvpRoomEnermyInfo_2eproto();
  friend void protobuf_ShutdownFile_SPvpRoomEnermyInfo_2eproto();

  void InitAsDefaultInstance();
  static SPvpRoomEnermyInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SPvpRoomEnermyInfo

// required int32 hair = 1;
inline bool SPvpRoomEnermyInfo::has_hair() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SPvpRoomEnermyInfo::set_has_hair() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SPvpRoomEnermyInfo::clear_has_hair() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SPvpRoomEnermyInfo::clear_hair() {
  hair_ = 0;
  clear_has_hair();
}
inline ::google::protobuf::int32 SPvpRoomEnermyInfo::hair() const {
  // @@protoc_insertion_point(field_get:SPvpRoomEnermyInfo.hair)
  return hair_;
}
inline void SPvpRoomEnermyInfo::set_hair(::google::protobuf::int32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:SPvpRoomEnermyInfo.hair)
}

// required int32 body = 2;
inline bool SPvpRoomEnermyInfo::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SPvpRoomEnermyInfo::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SPvpRoomEnermyInfo::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SPvpRoomEnermyInfo::clear_body() {
  body_ = 0;
  clear_has_body();
}
inline ::google::protobuf::int32 SPvpRoomEnermyInfo::body() const {
  // @@protoc_insertion_point(field_get:SPvpRoomEnermyInfo.body)
  return body_;
}
inline void SPvpRoomEnermyInfo::set_body(::google::protobuf::int32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:SPvpRoomEnermyInfo.body)
}

// required int32 weapon = 3;
inline bool SPvpRoomEnermyInfo::has_weapon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SPvpRoomEnermyInfo::set_has_weapon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SPvpRoomEnermyInfo::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SPvpRoomEnermyInfo::clear_weapon() {
  weapon_ = 0;
  clear_has_weapon();
}
inline ::google::protobuf::int32 SPvpRoomEnermyInfo::weapon() const {
  // @@protoc_insertion_point(field_get:SPvpRoomEnermyInfo.weapon)
  return weapon_;
}
inline void SPvpRoomEnermyInfo::set_weapon(::google::protobuf::int32 value) {
  set_has_weapon();
  weapon_ = value;
  // @@protoc_insertion_point(field_set:SPvpRoomEnermyInfo.weapon)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SPvpRoomEnermyInfo_2eproto__INCLUDED
