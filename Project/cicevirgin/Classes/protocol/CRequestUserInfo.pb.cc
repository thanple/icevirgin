// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CRequestUserInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CRequestUserInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CRequestUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRequestUserInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CRequestUserInfo_2eproto() {
  protobuf_AddDesc_CRequestUserInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CRequestUserInfo.proto");
  GOOGLE_CHECK(file != NULL);
  CRequestUserInfo_descriptor_ = file->message_type(0);
  static const int CRequestUserInfo_offsets_[1] = {
  };
  CRequestUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CRequestUserInfo_descriptor_,
      CRequestUserInfo::default_instance_,
      CRequestUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CRequestUserInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CRequestUserInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CRequestUserInfo_descriptor_, &CRequestUserInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CRequestUserInfo_2eproto() {
  delete CRequestUserInfo::default_instance_;
  delete CRequestUserInfo_reflection_;
}

void protobuf_AddDesc_CRequestUserInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026CRequestUserInfo.proto\"\022\n\020CRequestUser"
    "InfoB7\n\"com.thanple.gs.common.nio.protoc"
    "olB\021_CRequestUserInfo", 101);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CRequestUserInfo.proto", &protobuf_RegisterTypes);
  CRequestUserInfo::default_instance_ = new CRequestUserInfo();
  CRequestUserInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CRequestUserInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CRequestUserInfo_2eproto {
  StaticDescriptorInitializer_CRequestUserInfo_2eproto() {
    protobuf_AddDesc_CRequestUserInfo_2eproto();
  }
} static_descriptor_initializer_CRequestUserInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CRequestUserInfo::CRequestUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRequestUserInfo)
}

void CRequestUserInfo::InitAsDefaultInstance() {
}

CRequestUserInfo::CRequestUserInfo(const CRequestUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CRequestUserInfo)
}

void CRequestUserInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRequestUserInfo::~CRequestUserInfo() {
  // @@protoc_insertion_point(destructor:CRequestUserInfo)
  SharedDtor();
}

void CRequestUserInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CRequestUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRequestUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRequestUserInfo_descriptor_;
}

const CRequestUserInfo& CRequestUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CRequestUserInfo_2eproto();
  return *default_instance_;
}

CRequestUserInfo* CRequestUserInfo::default_instance_ = NULL;

CRequestUserInfo* CRequestUserInfo::New() const {
  return new CRequestUserInfo;
}

void CRequestUserInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CRequestUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CRequestUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CRequestUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRequestUserInfo)
  return false;
#undef DO_
}

void CRequestUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRequestUserInfo)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CRequestUserInfo)
}

::google::protobuf::uint8* CRequestUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRequestUserInfo)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRequestUserInfo)
  return target;
}

int CRequestUserInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRequestUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CRequestUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CRequestUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CRequestUserInfo::MergeFrom(const CRequestUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CRequestUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRequestUserInfo::CopyFrom(const CRequestUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRequestUserInfo::IsInitialized() const {

  return true;
}

void CRequestUserInfo::Swap(CRequestUserInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CRequestUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRequestUserInfo_descriptor_;
  metadata.reflection = CRequestUserInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
