// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SAddCharacter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SAddCharacter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SAddCharacter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SAddCharacter_reflection_ = NULL;
const ::google::protobuf::Descriptor* SAddCharacter_CharacterItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SAddCharacter_CharacterItem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SAddCharacter_2eproto() {
  protobuf_AddDesc_SAddCharacter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SAddCharacter.proto");
  GOOGLE_CHECK(file != NULL);
  SAddCharacter_descriptor_ = file->message_type(0);
  static const int SAddCharacter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter, characters_),
  };
  SAddCharacter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SAddCharacter_descriptor_,
      SAddCharacter::default_instance_,
      SAddCharacter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SAddCharacter));
  SAddCharacter_CharacterItem_descriptor_ = SAddCharacter_descriptor_->nested_type(0);
  static const int SAddCharacter_CharacterItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter_CharacterItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter_CharacterItem, hair_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter_CharacterItem, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter_CharacterItem, weapon_),
  };
  SAddCharacter_CharacterItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SAddCharacter_CharacterItem_descriptor_,
      SAddCharacter_CharacterItem::default_instance_,
      SAddCharacter_CharacterItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter_CharacterItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAddCharacter_CharacterItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SAddCharacter_CharacterItem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SAddCharacter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SAddCharacter_descriptor_, &SAddCharacter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SAddCharacter_CharacterItem_descriptor_, &SAddCharacter_CharacterItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SAddCharacter_2eproto() {
  delete SAddCharacter::default_instance_;
  delete SAddCharacter_reflection_;
  delete SAddCharacter_CharacterItem::default_instance_;
  delete SAddCharacter_CharacterItem_reflection_;
}

void protobuf_AddDesc_SAddCharacter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023SAddCharacter.proto\"\212\001\n\rSAddCharacter\022"
    "0\n\ncharacters\030\001 \003(\0132\034.SAddCharacter.Char"
    "acterItem\032G\n\rCharacterItem\022\n\n\002id\030\001 \002(\005\022\014"
    "\n\004hair\030\002 \002(\005\022\014\n\004body\030\003 \002(\005\022\016\n\006weapon\030\004 \002"
    "(\005B4\n\"com.thanple.gs.common.nio.protocol"
    "B\016_SAddCharacter", 216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SAddCharacter.proto", &protobuf_RegisterTypes);
  SAddCharacter::default_instance_ = new SAddCharacter();
  SAddCharacter_CharacterItem::default_instance_ = new SAddCharacter_CharacterItem();
  SAddCharacter::default_instance_->InitAsDefaultInstance();
  SAddCharacter_CharacterItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SAddCharacter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SAddCharacter_2eproto {
  StaticDescriptorInitializer_SAddCharacter_2eproto() {
    protobuf_AddDesc_SAddCharacter_2eproto();
  }
} static_descriptor_initializer_SAddCharacter_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SAddCharacter_CharacterItem::kIdFieldNumber;
const int SAddCharacter_CharacterItem::kHairFieldNumber;
const int SAddCharacter_CharacterItem::kBodyFieldNumber;
const int SAddCharacter_CharacterItem::kWeaponFieldNumber;
#endif  // !_MSC_VER

SAddCharacter_CharacterItem::SAddCharacter_CharacterItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAddCharacter.CharacterItem)
}

void SAddCharacter_CharacterItem::InitAsDefaultInstance() {
}

SAddCharacter_CharacterItem::SAddCharacter_CharacterItem(const SAddCharacter_CharacterItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAddCharacter.CharacterItem)
}

void SAddCharacter_CharacterItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  hair_ = 0;
  body_ = 0;
  weapon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SAddCharacter_CharacterItem::~SAddCharacter_CharacterItem() {
  // @@protoc_insertion_point(destructor:SAddCharacter.CharacterItem)
  SharedDtor();
}

void SAddCharacter_CharacterItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SAddCharacter_CharacterItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SAddCharacter_CharacterItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SAddCharacter_CharacterItem_descriptor_;
}

const SAddCharacter_CharacterItem& SAddCharacter_CharacterItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SAddCharacter_2eproto();
  return *default_instance_;
}

SAddCharacter_CharacterItem* SAddCharacter_CharacterItem::default_instance_ = NULL;

SAddCharacter_CharacterItem* SAddCharacter_CharacterItem::New() const {
  return new SAddCharacter_CharacterItem;
}

void SAddCharacter_CharacterItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SAddCharacter_CharacterItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, weapon_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SAddCharacter_CharacterItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAddCharacter.CharacterItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hair;
        break;
      }

      // required int32 hair = 2;
      case 2: {
        if (tag == 16) {
         parse_hair:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hair_)));
          set_has_hair();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_body;
        break;
      }

      // required int32 body = 3;
      case 3: {
        if (tag == 24) {
         parse_body:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_)));
          set_has_body();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_weapon;
        break;
      }

      // required int32 weapon = 4;
      case 4: {
        if (tag == 32) {
         parse_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_)));
          set_has_weapon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAddCharacter.CharacterItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAddCharacter.CharacterItem)
  return false;
#undef DO_
}

void SAddCharacter_CharacterItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAddCharacter.CharacterItem)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 hair = 2;
  if (has_hair()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hair(), output);
  }

  // required int32 body = 3;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->body(), output);
  }

  // required int32 weapon = 4;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->weapon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAddCharacter.CharacterItem)
}

::google::protobuf::uint8* SAddCharacter_CharacterItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAddCharacter.CharacterItem)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 hair = 2;
  if (has_hair()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hair(), target);
  }

  // required int32 body = 3;
  if (has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->body(), target);
  }

  // required int32 weapon = 4;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->weapon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAddCharacter.CharacterItem)
  return target;
}

int SAddCharacter_CharacterItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required int32 hair = 2;
    if (has_hair()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hair());
    }

    // required int32 body = 3;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->body());
    }

    // required int32 weapon = 4;
    if (has_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SAddCharacter_CharacterItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SAddCharacter_CharacterItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SAddCharacter_CharacterItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SAddCharacter_CharacterItem::MergeFrom(const SAddCharacter_CharacterItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_hair()) {
      set_hair(from.hair());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
    if (from.has_weapon()) {
      set_weapon(from.weapon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SAddCharacter_CharacterItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAddCharacter_CharacterItem::CopyFrom(const SAddCharacter_CharacterItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAddCharacter_CharacterItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void SAddCharacter_CharacterItem::Swap(SAddCharacter_CharacterItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(hair_, other->hair_);
    std::swap(body_, other->body_);
    std::swap(weapon_, other->weapon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SAddCharacter_CharacterItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SAddCharacter_CharacterItem_descriptor_;
  metadata.reflection = SAddCharacter_CharacterItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SAddCharacter::kCharactersFieldNumber;
#endif  // !_MSC_VER

SAddCharacter::SAddCharacter()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAddCharacter)
}

void SAddCharacter::InitAsDefaultInstance() {
}

SAddCharacter::SAddCharacter(const SAddCharacter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAddCharacter)
}

void SAddCharacter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SAddCharacter::~SAddCharacter() {
  // @@protoc_insertion_point(destructor:SAddCharacter)
  SharedDtor();
}

void SAddCharacter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SAddCharacter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SAddCharacter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SAddCharacter_descriptor_;
}

const SAddCharacter& SAddCharacter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SAddCharacter_2eproto();
  return *default_instance_;
}

SAddCharacter* SAddCharacter::default_instance_ = NULL;

SAddCharacter* SAddCharacter::New() const {
  return new SAddCharacter;
}

void SAddCharacter::Clear() {
  characters_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SAddCharacter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAddCharacter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SAddCharacter.CharacterItem characters = 1;
      case 1: {
        if (tag == 10) {
         parse_characters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_characters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_characters;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAddCharacter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAddCharacter)
  return false;
#undef DO_
}

void SAddCharacter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAddCharacter)
  // repeated .SAddCharacter.CharacterItem characters = 1;
  for (int i = 0; i < this->characters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->characters(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAddCharacter)
}

::google::protobuf::uint8* SAddCharacter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAddCharacter)
  // repeated .SAddCharacter.CharacterItem characters = 1;
  for (int i = 0; i < this->characters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->characters(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAddCharacter)
  return target;
}

int SAddCharacter::ByteSize() const {
  int total_size = 0;

  // repeated .SAddCharacter.CharacterItem characters = 1;
  total_size += 1 * this->characters_size();
  for (int i = 0; i < this->characters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->characters(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SAddCharacter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SAddCharacter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SAddCharacter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SAddCharacter::MergeFrom(const SAddCharacter& from) {
  GOOGLE_CHECK_NE(&from, this);
  characters_.MergeFrom(from.characters_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SAddCharacter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAddCharacter::CopyFrom(const SAddCharacter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAddCharacter::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->characters())) return false;
  return true;
}

void SAddCharacter::Swap(SAddCharacter* other) {
  if (other != this) {
    characters_.Swap(&other->characters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SAddCharacter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SAddCharacter_descriptor_;
  metadata.reflection = SAddCharacter_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
