// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CFight.proto

#ifndef PROTOBUF_CFight_2eproto__INCLUDED
#define PROTOBUF_CFight_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CFight_2eproto();
void protobuf_AssignDesc_CFight_2eproto();
void protobuf_ShutdownFile_CFight_2eproto();

class CFight;

// ===================================================================

class CFight : public ::google::protobuf::Message {
 public:
  CFight();
  virtual ~CFight();

  CFight(const CFight& from);

  inline CFight& operator=(const CFight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CFight& default_instance();

  void Swap(CFight* other);

  // implements Message ----------------------------------------------

  CFight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CFight& from);
  void MergeFrom(const CFight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fighthType = 1;
  inline bool has_fighthtype() const;
  inline void clear_fighthtype();
  static const int kFighthTypeFieldNumber = 1;
  inline ::google::protobuf::int32 fighthtype() const;
  inline void set_fighthtype(::google::protobuf::int32 value);

  // required int32 skillType = 2;
  inline bool has_skilltype() const;
  inline void clear_skilltype();
  static const int kSkillTypeFieldNumber = 2;
  inline ::google::protobuf::int32 skilltype() const;
  inline void set_skilltype(::google::protobuf::int32 value);

  // required int32 fighthId = 3;
  inline bool has_fighthid() const;
  inline void clear_fighthid();
  static const int kFighthIdFieldNumber = 3;
  inline ::google::protobuf::int32 fighthid() const;
  inline void set_fighthid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CFight)
 private:
  inline void set_has_fighthtype();
  inline void clear_has_fighthtype();
  inline void set_has_skilltype();
  inline void clear_has_skilltype();
  inline void set_has_fighthid();
  inline void clear_has_fighthid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 fighthtype_;
  ::google::protobuf::int32 skilltype_;
  ::google::protobuf::int32 fighthid_;
  friend void  protobuf_AddDesc_CFight_2eproto();
  friend void protobuf_AssignDesc_CFight_2eproto();
  friend void protobuf_ShutdownFile_CFight_2eproto();

  void InitAsDefaultInstance();
  static CFight* default_instance_;
};
// ===================================================================


// ===================================================================

// CFight

// required int32 fighthType = 1;
inline bool CFight::has_fighthtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFight::set_has_fighthtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CFight::clear_has_fighthtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CFight::clear_fighthtype() {
  fighthtype_ = 0;
  clear_has_fighthtype();
}
inline ::google::protobuf::int32 CFight::fighthtype() const {
  // @@protoc_insertion_point(field_get:CFight.fighthType)
  return fighthtype_;
}
inline void CFight::set_fighthtype(::google::protobuf::int32 value) {
  set_has_fighthtype();
  fighthtype_ = value;
  // @@protoc_insertion_point(field_set:CFight.fighthType)
}

// required int32 skillType = 2;
inline bool CFight::has_skilltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFight::set_has_skilltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CFight::clear_has_skilltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CFight::clear_skilltype() {
  skilltype_ = 0;
  clear_has_skilltype();
}
inline ::google::protobuf::int32 CFight::skilltype() const {
  // @@protoc_insertion_point(field_get:CFight.skillType)
  return skilltype_;
}
inline void CFight::set_skilltype(::google::protobuf::int32 value) {
  set_has_skilltype();
  skilltype_ = value;
  // @@protoc_insertion_point(field_set:CFight.skillType)
}

// required int32 fighthId = 3;
inline bool CFight::has_fighthid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CFight::set_has_fighthid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CFight::clear_has_fighthid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CFight::clear_fighthid() {
  fighthid_ = 0;
  clear_has_fighthid();
}
inline ::google::protobuf::int32 CFight::fighthid() const {
  // @@protoc_insertion_point(field_get:CFight.fighthId)
  return fighthid_;
}
inline void CFight::set_fighthid(::google::protobuf::int32 value) {
  set_has_fighthid();
  fighthid_ = value;
  // @@protoc_insertion_point(field_set:CFight.fighthId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CFight_2eproto__INCLUDED
