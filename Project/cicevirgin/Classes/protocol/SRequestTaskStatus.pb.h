// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SRequestTaskStatus.proto

#ifndef PROTOBUF_SRequestTaskStatus_2eproto__INCLUDED
#define PROTOBUF_SRequestTaskStatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SRequestTaskStatus_2eproto();
void protobuf_AssignDesc_SRequestTaskStatus_2eproto();
void protobuf_ShutdownFile_SRequestTaskStatus_2eproto();

class SRequestTaskStatus;

enum SRequestTaskStatus_Status {
  SRequestTaskStatus_Status_NOT_START = 0,
  SRequestTaskStatus_Status_OPENING = 1,
  SRequestTaskStatus_Status_FINISH = 2
};
bool SRequestTaskStatus_Status_IsValid(int value);
const SRequestTaskStatus_Status SRequestTaskStatus_Status_Status_MIN = SRequestTaskStatus_Status_NOT_START;
const SRequestTaskStatus_Status SRequestTaskStatus_Status_Status_MAX = SRequestTaskStatus_Status_FINISH;
const int SRequestTaskStatus_Status_Status_ARRAYSIZE = SRequestTaskStatus_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* SRequestTaskStatus_Status_descriptor();
inline const ::std::string& SRequestTaskStatus_Status_Name(SRequestTaskStatus_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    SRequestTaskStatus_Status_descriptor(), value);
}
inline bool SRequestTaskStatus_Status_Parse(
    const ::std::string& name, SRequestTaskStatus_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SRequestTaskStatus_Status>(
    SRequestTaskStatus_Status_descriptor(), name, value);
}
// ===================================================================

class SRequestTaskStatus : public ::google::protobuf::Message {
 public:
  SRequestTaskStatus();
  virtual ~SRequestTaskStatus();

  SRequestTaskStatus(const SRequestTaskStatus& from);

  inline SRequestTaskStatus& operator=(const SRequestTaskStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SRequestTaskStatus& default_instance();

  void Swap(SRequestTaskStatus* other);

  // implements Message ----------------------------------------------

  SRequestTaskStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SRequestTaskStatus& from);
  void MergeFrom(const SRequestTaskStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SRequestTaskStatus_Status Status;
  static const Status NOT_START = SRequestTaskStatus_Status_NOT_START;
  static const Status OPENING = SRequestTaskStatus_Status_OPENING;
  static const Status FINISH = SRequestTaskStatus_Status_FINISH;
  static inline bool Status_IsValid(int value) {
    return SRequestTaskStatus_Status_IsValid(value);
  }
  static const Status Status_MIN =
    SRequestTaskStatus_Status_Status_MIN;
  static const Status Status_MAX =
    SRequestTaskStatus_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    SRequestTaskStatus_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return SRequestTaskStatus_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return SRequestTaskStatus_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return SRequestTaskStatus_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required .SRequestTaskStatus.Status status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::SRequestTaskStatus_Status status() const;
  inline void set_status(::SRequestTaskStatus_Status value);

  // @@protoc_insertion_point(class_scope:SRequestTaskStatus)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  int status_;
  friend void  protobuf_AddDesc_SRequestTaskStatus_2eproto();
  friend void protobuf_AssignDesc_SRequestTaskStatus_2eproto();
  friend void protobuf_ShutdownFile_SRequestTaskStatus_2eproto();

  void InitAsDefaultInstance();
  static SRequestTaskStatus* default_instance_;
};
// ===================================================================


// ===================================================================

// SRequestTaskStatus

// required int32 type = 1;
inline bool SRequestTaskStatus::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SRequestTaskStatus::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SRequestTaskStatus::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SRequestTaskStatus::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SRequestTaskStatus::type() const {
  // @@protoc_insertion_point(field_get:SRequestTaskStatus.type)
  return type_;
}
inline void SRequestTaskStatus::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SRequestTaskStatus.type)
}

// required .SRequestTaskStatus.Status status = 2;
inline bool SRequestTaskStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SRequestTaskStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SRequestTaskStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SRequestTaskStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::SRequestTaskStatus_Status SRequestTaskStatus::status() const {
  // @@protoc_insertion_point(field_get:SRequestTaskStatus.status)
  return static_cast< ::SRequestTaskStatus_Status >(status_);
}
inline void SRequestTaskStatus::set_status(::SRequestTaskStatus_Status value) {
  assert(::SRequestTaskStatus_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SRequestTaskStatus.status)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SRequestTaskStatus_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SRequestTaskStatus_Status>() {
  return ::SRequestTaskStatus_Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SRequestTaskStatus_2eproto__INCLUDED
