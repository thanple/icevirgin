// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SFightBlood.proto

package com.thanple.gs.common.nio.protocol;

public final class _SFightBlood {
  private _SFightBlood() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SFightBloodOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SFightBlood)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 fighthType = 1;</code>
     */
    boolean hasFighthType();
    /**
     * <code>required int32 fighthType = 1;</code>
     */
    int getFighthType();

    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    java.util.List<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo> 
        getInfoList();
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo getInfo(int index);
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    int getInfoCount();
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    java.util.List<? extends com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder> 
        getInfoOrBuilderList();
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder getInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SFightBlood}
   */
  public static final class SFightBlood extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SFightBlood)
      SFightBloodOrBuilder {
    // Use SFightBlood.newBuilder() to construct.
    private SFightBlood(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SFightBlood(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SFightBlood defaultInstance;
    public static SFightBlood getDefaultInstance() {
      return defaultInstance;
    }

    public SFightBlood getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SFightBlood(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fighthType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                info_ = new java.util.ArrayList<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              info_.add(input.readMessage(com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          info_ = java.util.Collections.unmodifiableList(info_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.class, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.Builder.class);
    }

    public static com.google.protobuf.Parser<SFightBlood> PARSER =
        new com.google.protobuf.AbstractParser<SFightBlood>() {
      public SFightBlood parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SFightBlood(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SFightBlood> getParserForType() {
      return PARSER;
    }

    public interface FighterInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:SFightBlood.FighterInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 id = 1;</code>
       */
      boolean hasId();
      /**
       * <code>required int32 id = 1;</code>
       */
      int getId();

      /**
       * <code>required int32 blood = 2;</code>
       */
      boolean hasBlood();
      /**
       * <code>required int32 blood = 2;</code>
       */
      int getBlood();
    }
    /**
     * Protobuf type {@code SFightBlood.FighterInfo}
     */
    public static final class FighterInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:SFightBlood.FighterInfo)
        FighterInfoOrBuilder {
      // Use FighterInfo.newBuilder() to construct.
      private FighterInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FighterInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FighterInfo defaultInstance;
      public static FighterInfo getDefaultInstance() {
        return defaultInstance;
      }

      public FighterInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FighterInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                blood_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_FighterInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_FighterInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.class, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<FighterInfo> PARSER =
          new com.google.protobuf.AbstractParser<FighterInfo>() {
        public FighterInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FighterInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FighterInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }

      public static final int BLOOD_FIELD_NUMBER = 2;
      private int blood_;
      /**
       * <code>required int32 blood = 2;</code>
       */
      public boolean hasBlood() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 blood = 2;</code>
       */
      public int getBlood() {
        return blood_;
      }

      private void initFields() {
        id_ = 0;
        blood_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBlood()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, blood_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, blood_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code SFightBlood.FighterInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:SFightBlood.FighterInfo)
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_FighterInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_FighterInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.class, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder.class);
        }

        // Construct using com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          blood_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_FighterInfo_descriptor;
        }

        public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo getDefaultInstanceForType() {
          return com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.getDefaultInstance();
        }

        public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo build() {
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo buildPartial() {
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo result = new com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.blood_ = blood_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo) {
            return mergeFrom((com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo other) {
          if (other == com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasBlood()) {
            setBlood(other.getBlood());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasBlood()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>required int32 id = 1;</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 id = 1;</code>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>required int32 id = 1;</code>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 id = 1;</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private int blood_ ;
        /**
         * <code>required int32 blood = 2;</code>
         */
        public boolean hasBlood() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 blood = 2;</code>
         */
        public int getBlood() {
          return blood_;
        }
        /**
         * <code>required int32 blood = 2;</code>
         */
        public Builder setBlood(int value) {
          bitField0_ |= 0x00000002;
          blood_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 blood = 2;</code>
         */
        public Builder clearBlood() {
          bitField0_ = (bitField0_ & ~0x00000002);
          blood_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SFightBlood.FighterInfo)
      }

      static {
        defaultInstance = new FighterInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:SFightBlood.FighterInfo)
    }

    private int bitField0_;
    public static final int FIGHTHTYPE_FIELD_NUMBER = 1;
    private int fighthType_;
    /**
     * <code>required int32 fighthType = 1;</code>
     */
    public boolean hasFighthType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 fighthType = 1;</code>
     */
    public int getFighthType() {
      return fighthType_;
    }

    public static final int INFO_FIELD_NUMBER = 2;
    private java.util.List<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo> info_;
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    public java.util.List<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo> getInfoList() {
      return info_;
    }
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    public java.util.List<? extends com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder> 
        getInfoOrBuilderList() {
      return info_;
    }
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    public int getInfoCount() {
      return info_.size();
    }
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo getInfo(int index) {
      return info_.get(index);
    }
    /**
     * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
     */
    public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder getInfoOrBuilder(
        int index) {
      return info_.get(index);
    }

    private void initFields() {
      fighthType_ = 0;
      info_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFighthType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getInfoCount(); i++) {
        if (!getInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fighthType_);
      }
      for (int i = 0; i < info_.size(); i++) {
        output.writeMessage(2, info_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fighthType_);
      }
      for (int i = 0; i < info_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, info_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SFightBlood}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SFightBlood)
        com.thanple.gs.common.nio.protocol._SFightBlood.SFightBloodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.class, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.Builder.class);
      }

      // Construct using com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fighthType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          infoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.thanple.gs.common.nio.protocol._SFightBlood.internal_static_SFightBlood_descriptor;
      }

      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood getDefaultInstanceForType() {
        return com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.getDefaultInstance();
      }

      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood build() {
        com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood buildPartial() {
        com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood result = new com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fighthType_ = fighthType_;
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            info_ = java.util.Collections.unmodifiableList(info_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood) {
          return mergeFrom((com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood other) {
        if (other == com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.getDefaultInstance()) return this;
        if (other.hasFighthType()) {
          setFighthType(other.getFighthType());
        }
        if (infoBuilder_ == null) {
          if (!other.info_.isEmpty()) {
            if (info_.isEmpty()) {
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInfoIsMutable();
              info_.addAll(other.info_);
            }
            onChanged();
          }
        } else {
          if (!other.info_.isEmpty()) {
            if (infoBuilder_.isEmpty()) {
              infoBuilder_.dispose();
              infoBuilder_ = null;
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000002);
              infoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInfoFieldBuilder() : null;
            } else {
              infoBuilder_.addAllMessages(other.info_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFighthType()) {
          
          return false;
        }
        for (int i = 0; i < getInfoCount(); i++) {
          if (!getInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fighthType_ ;
      /**
       * <code>required int32 fighthType = 1;</code>
       */
      public boolean hasFighthType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 fighthType = 1;</code>
       */
      public int getFighthType() {
        return fighthType_;
      }
      /**
       * <code>required int32 fighthType = 1;</code>
       */
      public Builder setFighthType(int value) {
        bitField0_ |= 0x00000001;
        fighthType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fighthType = 1;</code>
       */
      public Builder clearFighthType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fighthType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo> info_ =
        java.util.Collections.emptyList();
      private void ensureInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          info_ = new java.util.ArrayList<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo>(info_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder> infoBuilder_;

      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public java.util.List<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo> getInfoList() {
        if (infoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(info_);
        } else {
          return infoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public int getInfoCount() {
        if (infoBuilder_ == null) {
          return info_.size();
        } else {
          return infoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo getInfo(int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);
        } else {
          return infoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder setInfo(
          int index, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.set(index, value);
          onChanged();
        } else {
          infoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder setInfo(
          int index, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.set(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder addInfo(com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(value);
          onChanged();
        } else {
          infoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder addInfo(
          int index, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(index, value);
          onChanged();
        } else {
          infoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder addInfo(
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder addInfo(
          int index, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder addAllInfo(
          java.lang.Iterable<? extends com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo> values) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, info_);
          onChanged();
        } else {
          infoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public Builder removeInfo(int index) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.remove(index);
          onChanged();
        } else {
          infoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder getInfoBuilder(
          int index) {
        return getInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder getInfoOrBuilder(
          int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);  } else {
          return infoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public java.util.List<? extends com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder> 
           getInfoOrBuilderList() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(info_);
        }
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder addInfoBuilder() {
        return getInfoFieldBuilder().addBuilder(
            com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder addInfoBuilder(
          int index) {
        return getInfoFieldBuilder().addBuilder(
            index, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SFightBlood.FighterInfo info = 2;</code>
       */
      public java.util.List<com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder> 
           getInfoBuilderList() {
        return getInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfo.Builder, com.thanple.gs.common.nio.protocol._SFightBlood.SFightBlood.FighterInfoOrBuilder>(
                  info_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SFightBlood)
    }

    static {
      defaultInstance = new SFightBlood(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SFightBlood)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SFightBlood_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SFightBlood_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SFightBlood_FighterInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SFightBlood_FighterInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021SFightBlood.proto\"s\n\013SFightBlood\022\022\n\nfi" +
      "ghthType\030\001 \002(\005\022&\n\004info\030\002 \003(\0132\030.SFightBlo" +
      "od.FighterInfo\032(\n\013FighterInfo\022\n\n\002id\030\001 \002(" +
      "\005\022\r\n\005blood\030\002 \002(\005B2\n\"com.thanple.gs.commo" +
      "n.nio.protocolB\014_SFightBlood"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SFightBlood_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SFightBlood_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SFightBlood_descriptor,
        new java.lang.String[] { "FighthType", "Info", });
    internal_static_SFightBlood_FighterInfo_descriptor =
      internal_static_SFightBlood_descriptor.getNestedTypes().get(0);
    internal_static_SFightBlood_FighterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SFightBlood_FighterInfo_descriptor,
        new java.lang.String[] { "Id", "Blood", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
